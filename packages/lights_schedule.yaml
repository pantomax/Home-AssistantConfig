###############################################################################
#
#                              AUTOMATIC LIGHTS
#
###############################################################################
#------------------------------------------------------------------------------
binary_sensor:
#------------------------------------------------------------------------------
  - platform: template
    sensors:
      permetti_accensione_luci:
        value_template: >-
          {{  is_state('input_boolean.giorno', 'off')
             and (is_state('input_select.house_mode', 'Normal')
             or is_state('input_select.house_mode', 'At home')
             or is_state('input_select.house_mode', 'Lights On')
             or is_state('input_select.house_mode', 'Weekend Mode')) }}
#------------------------------------------------------------------------------
timer:
#------------------------------------------------------------------------------
  spegnimento_automatico_bagno:
    duration: '00:10:00'
  spegnimento_bagno:
    duration: '00:00:20'
#------------------------------------------------------------------------------
input_boolean:
#------------------------------------------------------------------------------
  countdown_corridoio:
    name: Countdown_corridoio
    initial: off
    icon: mdi:timelapse
  giorno:
    name: Giorno
    initial: On
#------------------------------------------------------------------------------
input_number:
#------------------------------------------------------------------------------
  countdown_corridoio:
    name: countdown_corridoio
    min: 0
    max: 18000
    step: 1
    initial: 0
#------------------------------------------------------------------------------
sensor:
#------------------------------------------------------------------------------
  - platform: template
    sensors:
      countdown_corridoio:
        friendly_name: "Tempo Rimanente"
        value_template: "{{ states('sensor.countdown_corridoio_hours') }} : {{ states('sensor.countdown_corridoio_minutes') }} : {{ states('sensor.countdown_corridoio_seconds') }}"
  - platform: template
    sensors:
      countdown_corridoio_hours:
        value_template: >
          {% if ( ( states('input_number.countdown_corridoio') | float / 3600 ) | int ) < 10 %}
            0{{( states('input_number.countdown_corridoio') | float / 3600 ) | int}}
          {% else %}
            {{( states('input_number.countdown_corridoio') | float / 3600 ) | int}}
          {% endif %}
  - platform: template
    sensors:
      countdown_corridoio_minutes:
        value_template: >
          {% if ( ((( states('input_number.countdown_corridoio') | float / 3600 ) - ( states('sensor.countdown_corridoio_hours') | float )) * 60 ) | int ) < 10 %}
            0{{((( states('input_number.countdown_corridoio') | float / 3600 ) - ( states('sensor.countdown_corridoio_hours') | float )) * 60 ) | int}}
          {% else %}
            {{((( states('input_number.countdown_corridoio') | float / 3600 ) - ( states('sensor.countdown_corridoio_hours') | float )) * 60 ) | int}}
          {% endif %}
  - platform: template
    sensors:
      countdown_corridoio_seconds:
        value_template: >
          {% if ( ((((( states('input_number.countdown_corridoio') | float / 3600 ) - ( states('sensor.countdown_corridoio_hours') | float )) * 60 ) - ( states('sensor.countdown_corridoio_minutes') | float )) * 60 ) | int ) < 10 %}
            0{{((((( states('input_number.countdown_corridoio') | float / 3600 ) - ( states('sensor.countdown_corridoio_hours') | float )) * 60 ) - ( states('sensor.countdown_corridoio_minutes') | float )) * 60 ) | int}}
          {% else %}
            {{((((( states('input_number.countdown_corridoio') | float / 3600 ) - ( states('sensor.countdown_corridoio_hours') | float )) * 60 ) - ( states('sensor.countdown_corridoio_minutes') | float )) * 60 ) | int}}
          {% endif %}
  - platform: template
    sensors:
      countdown_corridoio_meno_1:
        value_template: "{{( states('input_number.countdown_corridoio') | int - 1 ) | int}}"
#------------------------------------------------------------------------------
script:
#------------------------------------------------------------------------------
  scala_corridoio:
    sequence:
      - service: input_number.set_value
        data_template:
          entity_id: 'input_number.countdown_corridoio'
          value: "{{ states.sensor.countdown_corridoio_meno_1.state | int }}"
      - service: script.turn_on
        data:
          entity_id: script.attendi_e_ripeti_corridoio
#******************************************************************************
  attendi_e_ripeti_corridoio:
    sequence:
      - condition: and
        conditions:
           - condition: numeric_state
             entity_id: input_number.countdown_corridoio
             above: '0'
      - delay:
          milliseconds: 1
      - service: script.turn_on
        data:
          entity_id: script.scala_corridoio
#------------------------------------------------------------------------------
automation:
#------------------------------------------------------------------------------

#******************************************************************************
#  - alias: "Giorno"
#    trigger:
#      platform: time
#      at: '6:30'
#    action:
#      service: homeassistant.turn_on
#      entity_id: input_boolean.giorno
#******************************************************************************
#  - alias: "Notte"
#    trigger:
#      platform: time
#      at: '16:00:00'
#    action:
#      service: homeassistant.turn_off
#      entity_id: input_boolean.giorno
#******************************************************************************
  - alias: "Giorno"
    trigger:
      platform: numeric_state
      entity_id: sensor.sunlight_pct
      above: 20
    action:
      service: homeassistant.turn_on
      entity_id: input_boolean.giorno
#******************************************************************************
  - alias: "Notte"
    trigger:
      platform: numeric_state
      entity_id: sensor.sunlight_pct
      below: 20
    action:
      service: homeassistant.turn_off
      entity_id: input_boolean.giorno
#******************************************************************************
#*****************************   GIARDINO  ************************************
#******************************************************************************
  - alias: "Exterior Lighting on when dark outside"
    trigger:
      platform: numeric_state
      entity_id: sensor.sunlight_pct
      below: 1
    action:
      service: light.turn_on
      entity_id: light.giardino
#******************************************************************************
  - alias: "Exterior Lighting off at 0.30"
    trigger:
      platform: time
      at: '23:30:00'
    action:
      service: light.turn_off
      entity_id: light.giardino
#******************************************************************************
  - alias: "Controllo spegnimento luce giardino in caso di riavvii del server - Accensione"
    trigger:
      platform: time
      at: '0:58:00'
    action:
      service: light.turn_on
      entity_id: light.giardino
#******************************************************************************
  - alias: "Controllo spegnimento luce giardino in caso di riavvii del server - Spegnimento"
    trigger:
      platform: time
      at: '00:58:03'
    action:
      service: light.turn_off
      entity_id: light.giardino
#******************************************************************************
#*****************************   CORRIDOIO   **********************************
#******************************************************************************
  - alias: "Accendi Luci corridoio con sensore"
    trigger:
      - platform: state
        entity_id: binary_sensor.movimento_corridoio
        to: 'on'
    condition:
      condition: state
      entity_id: binary_sensor.permetti_accensione_luci
      state: 'on'
    action:
      - service: switch.turn_on
        entity_id: switch.corridoio_bagno
      - service: switch.turn_on
        entity_id: switch.corridoio_porta
      - service: input_number.set_value
        data_template:
         entity_id: input_number.countdown_corridoio
         value: "360"
      - service: mqtt.publish
        data:
          topic: 'sensors/rf/receiver'
          payload: '1111111'
          retain: 'true'
#******************************************************************************
  - alias: "Spegni Luci corridoio"
    trigger:
      - platform: state
        entity_id: binary_sensor.movimento_corridoio
        to: 'off'
    action:
      - service: switch.turn_off
        entity_id: switch.corridoio_bagno
      - service: switch.turn_off
        entity_id: switch.corridoio_porta
#******************************************************************************
  - alias: "Accendi Luci corridoio con porta"
    trigger:
      - platform: state
        entity_id: binary_sensor.porta_retro
        to: 'on'
      - platform: state
        entity_id: binary_sensor.porta_corridoio
        to: 'on'
    action:
      - service: switch.turn_on
        entity_id: switch.corridoio_bagno
      - service: switch.turn_on
        entity_id: switch.corridoio_porta
      - service: input_number.set_value
        data_template:
         entity_id: input_number.countdown_corridoio
         value: "360"
#******************************************************************************  
  - alias: "Spegni Luci corridoio con porte"
    trigger:
      - platform: state
        entity_id: binary_sensor.porta_retro
        to: 'off'
      - platform: state
        entity_id: binary_sensor.porta_corridoio
        to: 'off'
    condition:
    - condition: and
      conditions:
      - condition: template
        value_template: "{{ not is_state('input_select.house_mode', 'Lights On') }}"
      - condition: state
        entity_id: binary_sensor.movimento_corridoio
        state: 'off'
    action:
      - service: switch.turn_off
        entity_id: switch.corridoio_bagno
      - service: switch.turn_off
        entity_id: switch.corridoio_porta
      - service: input_number.set_value
        data_template:
         entity_id: input_number.countdown_corrifoio
         value: "0"
#******************************************************************************
  - alias: "Start Countdown spegnimento luci corridoio"
    trigger:
      platform: numeric_state
      entity_id: input_number.countdown_corridoio
      above: '0'
    action:
      service: script.turn_on
      entity_id: script.scala_corridoio
#******************************************************************************
  - alias: "Stop Countdown spegnimento luci corridoio"
    trigger:
      platform: numeric_state
      entity_id: input_number.countdown_corridoio
      below: '1'
    condition:
      condition: state
      entity_id: binary_sensor.movimento_corridoio
      state: 'off'
    action:
      - service: switch.turn_off
        entity_id: switch.corridoio_bagno
      - service: switch.turn_off
        entity_id: switch.corridoio_porta
#******************************************************************************
  - alias: "Controlla ogni 5 minuti e spegne luci corridoio"
    trigger:
      platform: time
      minutes: '/5'
      seconds: 00
    condition:
    - condition: and
      conditions:
      - condition: template
        value_template: "{{ not is_state('input_select.house_mode', 'Lights On') }}"
      - condition: state
        entity_id: binary_sensor.movimento_corridoio
        state: 'off'
      - condition: state
        entity_id: binary_sensor.porta_retro
        state: 'off'
    action:
      - service: switch.turn_off
        entity_id: switch.corridoio_bagno
      - service: switch.turn_off
        entity_id: switch.corridoio_porta
#******************************************************************************
#******************************   CUCINA   ************************************
#******************************************************************************
  - alias: "Accendi Luce Cucina"
    trigger:
      - platform: state
        entity_id: binary_sensor.movimento_cucina
        to: 'on'
    condition:
#    - condition: and
#      conditions:
      - condition: state
        entity_id: binary_sensor.permetti_accensione_luci
        state: 'on'
#      - condition: or
#        conditions:
# tutti i giorni dalle 7.15 alle 8.15
#        - condition: and
#          conditions:
#          - condition: time
#            after: '7:15'
#          - condition: time
#            before: '8:15'
# tutti i giorni dopo il tramonto comunque dopo le 17 fino a mezzanotte
#        - condition: and
#          conditions:
#          - condition: sun
#            after: sunset
#            after_offset: "-00:30:00"
#          - condition: time
#            after: '20:00'
# tutti i giorni dopo le 17 se c'è nuvoloso
#        - condition: and
#          conditions:
#          - condition: time
#            after: '17:00'
#          - condition: numeric_state
#            entity_id: sensor.dark_sky_cloud_coverage
#            above: 90
# nel weekend per tutto il giorno dopo le 7 del mattino se c'è nuvoloso
#        - condition: and
#          conditions:
#          - condition: time
#            after: '7:00'
#          - condition: numeric_state
#            entity_id: sensor.dark_sky_cloud_coverage
#            above: 90
#          - condition: time
#            weekday:
#              - sat
#              - sun
    action:
      - service: light.turn_on
        entity_id: group.kitchen
#******************************************************************************
  - alias: "Spegni Luce Cucina"
    trigger:
      - platform: state
        entity_id: binary_sensor.movimento_cucina
        to: 'off'
    condition:
      condition: template
      value_template: "{{ not is_state('input_select.house_mode', 'Lights On') }}"
    action:
      - service: light.turn_off
        entity_id: group.kitchen
#******************************************************************************
  - alias: "Controlla ogni 9 minuti e spegne luci cucina"
    trigger:
      platform: time
      minutes: '/9'
      seconds: 00
    condition:
    - condition: and
      conditions:
      - condition: template
        value_template: "{{ not is_state('input_select.house_mode', 'Lights On') }}"
      - condition: state
        entity_id: binary_sensor.movimento_cucina
        state: 'off'
    action:
      - service: light.turn_off
        entity_id: light.light_kitchen
#******************************************************************************
  - alias: "Luce Cucina Rimani Accesa"
    trigger:
      - platform: state
        entity_id: input_select.house_mode
        to: 'Lights On'
    action:
      - service: input_number.set_value
        data_template:
         entity_id: input_number.tempo_spegnimento_luce_cucina
         value: 120
#******************************************************************************
  - alias: "Luce Cucina Tempo 5 minuti durante i pasti"
    trigger:
      - platform: state
        entity_id: input_select.house_mode
        to: 'Normal'
      - platform: time
        at: '7:20:00'
      - platform: time
        at: '19:15:00'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.lightsoff
          state: 'on'
        - condition: or
          conditions:
            - condition: time
              after: '7:20:00'
              before: '7:50:00'
            - condition: time
              after: '19:15:00'
              before: '20:30:00'
    action:
      - service: input_number.set_value
        data_template:
         entity_id: input_number.tempo_spegnimento_luce_cucina
         value: 10
#******************************************************************************
  - alias: "Luce Cucina Ripristino 1 minuto fuori pasti"
    trigger:
      - platform: state
        entity_id: input_select.house_mode
        to: 'Normal'
      - platform: time
        at: '7:50:00'
      - platform: time
        at: '20:30:00'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.lightsoff
          state: 'on'
        - condition: or
          conditions:
            - condition: time
              after: '7:50:00'
              before: '19:15:00'
            - condition: time
              after: '20:30:00'
            - condition: time
              before: '7:20:00'
    action:
      - service: input_number.set_value
        data_template:
         entity_id: input_number.tempo_spegnimento_luce_cucina
         value: 1
#******************************************************************************
#******************************   LETTO   **************************************
#******************************************************************************
  - alias: 'Accendi luce sotto il letto di notte'
    trigger:
      - platform: state
        entity_id: binary_sensor.letto
        to: 'on'
    condition:
      - condition: time
        after: '00:00:00'
        before: '10:00:00'
    action:
      - service: light.turn_on
        data:
          entity_id: light.led_strip_camera
          rgb_color: [255, 255, 255]
          brightness: 2
      - service: mqtt.publish
        data:
          topic: 'sensors/rf/receiver'
          payload: '1111111'
          retain: 'true'
  - alias: 'Accendi luci di giorno'
    trigger:
      - platform: state
        entity_id: binary_sensor.letto
        to: 'on'
    condition:
      - condition: time
        after: '10:00:00'
        before: '00:00:00'
    action:
      - service: light.turn_on
        entity_id: light.camera
      - service: light.turn_on
        data:
          entity_id: light.led_strip_camera
          rgb_color: [255, 255, 255]
          brightness: 100
      - service: mqtt.publish
        data:
          topic: 'sensors/rf/receiver'
          payload: '1111111'
          retain: 'true'
#******************************************************************************
  - alias: 'Spegni luce sotto il letto'
    trigger:
      - platform: state
        entity_id: binary_sensor.letto
        to: 'off'
    action:
      - service: light.turn_off
        entity_id: light.camera
      - service: light.turn_off
        entity_id: light.led_strip_camera
#******************************************************************************
  - alias: "Accende le luci sui comodini tutti i giorni alle 7.10 del lun al ven"
    trigger:
      platform: time
      at: '07:15:00'
    condition:
    - condition: and
      conditions:
      - condition: state
        entity_id: binary_sensor.permetti_accensione_luci
        state: 'on'
      - condition: time
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
    action:
      - service: light.turn_on
        entity_id: light.camera
#******************************************************************************
  - alias: "Spegne le luci sui comodini tutti i giorni alle 7.40 del lun al ven"
    trigger:
      platform: time
      at: '07:40:00'
    condition:
      - condition: time
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
    action:
      - service: light.turn_off
        entity_id: light.camera
#******************************************************************************
#****************************   SCRIVANIA  ************************************
#******************************************************************************
  - alias: 'Accendi luce scrivania '
    trigger:
      - platform: state
        entity_id: binary_sensor.movimento_salotto
        to: 'on'
    condition:
      - condition: state
        entity_id: binary_sensor.permetti_accensione_luci
        state: 'on'
    action:
      - service: light.turn_on
        entity_id: light.light_desk
#******************************************************************************
  - alias: 'Spegni luce scrivania'
    trigger:
      - platform: state
        entity_id: binary_sensor.movimento_salotto
        to: 'off'
    condition:
      condition: template
      value_template: "{{ not is_state('input_select.house_mode', 'Lights On') }}"
    action:
      - service: light.turn_off
        entity_id: light.light_desk
#******************************************************************************
#*******************************   BAGNO   ************************************
#******************************************************************************
  - alias: 'Accendi luce bagno'
    trigger:
      - platform: state
        entity_id: binary_sensor.movimento_bagno
        to: 'on'
    condition:
      - condition: time
        after: '7:10:00'
        before: '01:00:00'
    action:
      - service: timer.cancel
        entity_id: timer.spegnimento_bagno
      - service: light.turn_on
        entity_id: light.bagno
      - service: mqtt.publish
        data:
          topic: 'sensors/rf/receiver'
          payload: '1111111'
          retain: 'true'
      - service: timer.start
        entity_id: timer.spegnimento_automatico_bagno
      - service: timer.cancel
        entity_id: timer.spegnimento_bagno
#******************************************************************************
  - alias: 'Spegni luce bagno'
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.spegnimento_bagno
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.spegnimento_automatico_bagno
    condition:
      condition: template
      value_template: "{{ not is_state('input_select.house_mode', 'Lights On') }}"
    action:
      - service: light.turn_off
        entity_id: light.bagno
      - service: timer.cancel
        entity_id: timer.spegnimento_bagno
      - service: timer.cancel
        entity_id: timer.spegnimento_automatico_bagno
#******************************************************************************
  - alias: 'Conto alla rovescia spegnimento luce bagno se si passa davanti al sensore di uscita'
    trigger:
      - platform: state
        entity_id: binary_sensor.motion_sensor_rf_5
        to: 'on'
    action:
      - service: mqtt.publish
        data:
          topic: 'sensors/rf/receiver'
          payload: '1111111'
          retain: 'true'
      - service: timer.start
        entity_id: timer.spegnimento_bagno
#******************************************************************************
#************************** TELECOMANDO LUCI NERO *****************************
#******************************************************************************
  - alias: 'Spegne luci salotto'
    trigger:
      - platform: state
        entity_id: binary_sensor.telecomando_rf_1d_off
        to: 'on'
    action:
      - service: hassio.addon_stdin
        data:
          addon: de3cd379_audio_player
          input: "http://192.168.1.100:8123/local/computerbeep_12.mp3"
      - service: scene.turn_on
        entity_id: scene.luci_sala_spente
#******************************************************************************
  - alias: 'Accende luci salotto'
    trigger:
      - platform: state
        entity_id: binary_sensor.telecomando_rf_1d_on
        to: 'on'
    action:
      - service: hassio.addon_stdin
        data:
          addon: de3cd379_audio_player
          input: "http://192.168.1.100:8123/local/computerbeep_12.mp3"
      - service: scene.turn_on
        entity_id: scene.luci_sala_accese
#******************************************************************************
  - alias: 'Striscia led aliceblue'
    trigger:
      - platform: state
        entity_id: binary_sensor.telecomando_rf_2d_off
        to: 'on'
    action:
      - service: hassio.addon_stdin
        data:
          addon: de3cd379_audio_player
          input: "http://192.168.1.100:8123/local/computerbeep_12.mp3"
      - service: light.turn_on
        data_template:
          entity_id: light.led_strip
          color_name: "aliceblue"
          brightness_pct: "100"
#******************************************************************************
  - alias: 'Modalità film'
    trigger:
      - platform: state
        entity_id: binary_sensor.telecomando_rf_2d_on
        to: 'on'
    action:
      - service: hassio.addon_stdin
        data:
          addon: de3cd379_audio_player
          input: "http://192.168.1.100:8123/local/computerbeep_12.mp3"
      - service: scene.turn_on
        entity_id: scene.film
#******************************************************************************
  - alias: 'Striscia Led chocolate'
    trigger:
      - platform: state
        entity_id: binary_sensor.telecomando_rf_3d_off
        to: 'on'
    action:
      - service: hassio.addon_stdin
        data:
          addon: de3cd379_audio_player
          input: "http://192.168.1.100:8123/local/computerbeep_12.mp3"
      - service: light.turn_on
        data_template:
          entity_id: light.led_strip
          color_name: "chocolate"
          brightness_pct: "100"
#******************************************************************************
  - alias: 'Striscia led orchid'
    trigger:
      - platform: state
        entity_id: binary_sensor.telecomando_rf_3d_on
        to: 'on'
    action:
      - service: hassio.addon_stdin
        data:
          addon: de3cd379_audio_player
          input: "http://192.168.1.100:8123/local/computerbeep_12.mp3"
      - service: light.turn_on
        data_template:
          entity_id: light.led_strip
          color_name: "orchid"
          brightness_pct: "100"
#******************************************************************************
#************************* TELECOMANDO LUCI BIANCO ****************************
#******************************************************************************
  - alias: 'Accende luci salotto 1'
    trigger:
      - platform: state
        entity_id: binary_sensor.telecomando_rf_1iv_on
        to: 'on'
    action:
      - service: hassio.addon_stdin
        data:
          addon: de3cd379_audio_player
          input: "http://192.168.1.100:8123/local/computerbeep_12.mp3"
      - service: scene.turn_on
        entity_id: scene.luci_sala_accese
  - alias: 'Accende luci salotto 2'
    trigger:
      - platform: state
        entity_id: binary_sensor.telecomando_rf_1iv_off
        to: 'on'
    action:
      - service: hassio.addon_stdin
        data:
          addon: de3cd379_audio_player
          input: "http://192.168.1.100:8123/local/computerbeep_12.mp3"
      - service: scene.turn_on
        entity_id: scene.luci_sala_accese
  - alias: 'Accende luci salotto 3'
    trigger:
      - platform: state
        entity_id: binary_sensor.telecomando_rf_2iv_on
        to: 'on'
    action:
      - service: hassio.addon_stdin
        data:
          addon: de3cd379_audio_player
          input: "http://192.168.1.100:8123/local/computerbeep_12.mp3"
      - service: scene.turn_on
        entity_id: scene.luci_sala_accese
  - alias: 'Accende luci salotto 4'
    trigger:
      - platform: state
        entity_id: binary_sensor.telecomando_rf_2iv_off
        to: 'on'
    action:
      - service: hassio.addon_stdin
        data:
          addon: de3cd379_audio_player
          input: "http://192.168.1.100:8123/local/computerbeep_12.mp3"
      - service: scene.turn_on
        entity_id: scene.luci_sala_accese
  - alias: 'Accende luci salotto 5'
    trigger:
      - platform: state
        entity_id: binary_sensor.telecomando_rf_3iv_on
        to: 'on'
    action:
      - service: hassio.addon_stdin
        data:
          addon: de3cd379_audio_player
          input: "http://192.168.1.100:8123/local/computerbeep_12.mp3"
      - service: scene.turn_on
        entity_id: scene.luci_sala_accese
  - alias: 'Accende luci salotto 6'
    trigger:
      - platform: state
        entity_id: binary_sensor.telecomando_rf_3iv_off
        to: 'on'
    action:
      - service: hassio.addon_stdin
        data:
          addon: de3cd379_audio_player
          input: "http://192.168.1.100:8123/local/computerbeep_12.mp3"
      - service: scene.turn_on
        entity_id: scene.luci_sala_accese
  - alias: 'Accende luci salotto 7'
    trigger:
      - platform: state
        entity_id: binary_sensor.telecomando_rf_4iv_on
        to: 'on'
    action:
      - service: hassio.addon_stdin
        data:
          addon: de3cd379_audio_player
          input: "http://192.168.1.100:8123/local/computerbeep_12.mp3"
      - service: scene.turn_on
        entity_id: scene.luci_sala_accese
  - alias: 'Accende luci salotto 8'
    trigger:
      - platform: state
        entity_id: binary_sensor.telecomando_rf_4iv_off
        to: 'on'
    action:
      - service: hassio.addon_stdin
        data:
          addon: de3cd379_audio_player
          input: "http://192.168.1.100:8123/local/computerbeep_12.mp3"
      - service: scene.turn_on
        entity_id: scene.luci_sala_accese
#******************************************************************************
